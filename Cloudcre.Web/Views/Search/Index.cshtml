@using SquishIt.Framework
@using Cloudcre.Web.HtmlHelpers
@model Cloudcre.Web.Models.PropertySearchResultViewModel

@{
    ViewBag.Title = "Cloud CRE - Search for Comparables";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<div class="container-fluid">
      <div class="row-fluid">
        <div class="span3">
		  <div class="well sidebar-nav">
            <ul class="nav nav-list">
			  <li class="dropdown">
				<a class="dropdown-toggle" data-toggle="dropdown" href="#">
					Search for <span class="searchPropType"></span> comparables<b class="caret"></b>
				</a>
                  <ul class="property-list dropdown-menu">
                      @Html.ToFormattedList(Model.PropertyType.ToList(), HtmlHelperExtensions.ListType.Unordered, @<a href="#" data-select-id="@item.Text">@item.Text</a>)
                  </ul>
			  </li>
            </ul>
          </div><!--/.well -->
			<form class="well">
                <label>Location search (type 'city', 'county' or 'zip')</label>
                <div id="search_box_container"></div>
				@*<input type="text" class="span3 form-search" placeholder="Try typing 'city', 'county' or 'zip'">*@
				<label class="checkbox">
				  <input type="checkbox"> Include current map location
				</label>
				<button type="submit" class="btn">Search</button>
			</form>
			<form class="well form-search">
			  <input id="keywords-search-box" type="text" class="input-medium search-query" placeholder="keyword search">
			  <button type="submit" class="btn">Search</button>
			</form>
			<form class="well">
			  <label>Building size search
				<span class="help-inline">(In square footage)</span>
			  </label>
			  <input type="text" class="input-small" placeholder="min">
			  <input type="text" class="input-small" placeholder="max">
			  <button type="submit" class="btn">Search</button>
			</form>
			<form class="well">
			  <label>Sale range search
				<span class="help-inline">(mm/dd/yyyy)</span>
			  </label>
			  <input type="text" class="input-small" placeholder="Start date">
			  <input type="text" class="input-small" placeholder="End date">
			  <button type="submit" class="btn">Search</button>
			</form>
          <div class="well sidebar-nav">
            <ul class="nav nav-list">
              <li class="nav-header">Queue</li>
              <li class="active"><a href="#">Link</a></li>
              <li><a href="#">Link</a></li>
              <li><a href="#">Link</a></li>
              <li><a href="#">Link</a></li>
            </ul>
          </div><!--/.well -->
        </div><!--/span-->
        <div class="span9">
          <div class="row-well">
            <div id="map"></div>
          </div>
@*			<div class="pagination">
			  <ul>
				<li><a href="#">Prev</a></li>
				<li class="active">
				  <a href="#">1</a>
				</li>
				<li><a href="#">2</a></li>
				<li><a href="#">3</a></li>
				<li><a href="#">4</a></li>
				<li><a href="#">Next</a></li>
			  </ul>
			</div>*@
			<div id="map-side-bar" data-bind='template: { name: "productItemTemplate", data: propertySearchResults }' />
			
@*			<div class="pagination">
			  <ul>
				<li><a href="#">Prev</a></li>
				<li class="active">
				  <a href="#">1</a>
				</li>
				<li><a href="#">2</a></li>
				<li><a href="#">3</a></li>
				<li><a href="#">4</a></li>
				<li><a href="#">Next</a></li>
			  </ul>
			</div>*@
        </div><!--/span-->
      </div><!--/row-->

      <hr>

      <footer>
        <p>&copy; Company 2012</p>
      </footer>

    </div><!--/.fluid-container-->




<table class="searchmap-tbl">
    <tr>
        @*<td>
            <div id="map"></div>
        </td>*@
        <td>
            <div class="search-options left">
                <h2>
                    Search Options
                </h2>
                <br />
                @using (Html.BeginForm("Index", "Search", FormMethod.Post, new {Id = "search-form-top"}))
                {
                    <div>
@*                        <div>
                            Property Type <select id="PropertyType" data-bind="options: propertyTypeOptionValues, value: propertyTypeSelected, valueUpdate: 'change'"></select>
                        </div>*@
                    </div>
                    <br />
                    <div>
                        <div>
                            Location (try typing 'county', 'city' or 'zip')
                        </div>
                        @*<div id="search_box_container"></div>*@
                    </div>
                    <br />
                    <div>
                        <div>
                            Keyword(s)
                        </div>
                        <div>
                           @* <input class="search-input" name="keywords-search-box" type="text" id="keywords-search-box" maxlength="255" />*@
                        </div>
                    </div>
                    <br />
                    decimal? sqftMin = (Model.SqftMin.HasValue) ? Math.Floor(Model.SqftMin.Value/100.00m)*100 : default(decimal);
                    decimal? sqftMax = (Model.SqftMax.HasValue) ? Math.Ceiling(Model.SqftMax.Value/100.00m)*100 : default(decimal);
                    <div>Building SqFt - 
                        Min <input name="sqftmin" type="text" size="10" id="sqftmin-box" maxlength="20" value="@sqftMin" />
                        Max <input name="sqftmax" type="text" size="10" id="sqftmax-box" maxlength="20" value="@sqftMax" />
                    </div>
                    <div>
                        <div id="slider-range"></div>
                    </div>
                    <br />
                    <div>
                        <div>
                            Sale Date Range (mm/dd/yyyy)
                        </div>
                        <div>
                            From <input name="mindate-box" type="text" id="mindate-box" maxlength="255" />
                                to <input name="maxdate-box" type="text" id="maxdate-box" maxlength="255" />
                        </div>
                    </div>
                    <br />
                    <div>
                        @Html.CheckBox("mapsearch", false)Include current map location in search query
                    </div>
                    <br />
                    <div>
                        <input type='submit' class="search-button" value="Search" />
                    </div>
                }
            </div>
            <div class="search-options left">
                <h2>Active Queue</h2>
                <a href="/" style="display: none" data-bind="click: summaryReport, visible: tempCond()">Download Sumary Report</a>
                <div id="queued" data-bind='template: { name: "queueTemplate", foreach: queuedProperties()}'> </div>
            </div>
        </td>
    </tr>
</table>
<div style="clear: both;"></div>
<div id="delete-dialog" title="Permanently remove a property">
    <div id="delete-dialog-msg"></div>
</div>
<span class="item-displayoptions-pages">
    <span id="pageLinksTop" data-bind="text: numberOfPropertyResults">        
        @*@Html.BuildPageLinksFrom(Model.CurrentPage, Model.TotalNumberOfPages, x => "JavaScript:displayPage("+ x +")") of @Model.TotalNumberOfPages pages, with @Model.NumberOfTitlesFound property record(s) in total*@
    </span>
</span>

<div style="clear: both;"></div>

@section scripts {
    @MvcHtmlString.Create(Bundle.JavaScript().Add("~/Scripts/Views/Search/Index.js").Render("~/Scripts/ccre_search#.js"))
    <script type="text/html" id="productItemTemplate">
        {{each Properties}}
            <div class="row-well map-location" data-id="${$index + 1}" data-point="{ lat: ${Latitude}, lng: ${Longitude} }" data-category="'apartment'">
				<div class="row-fluid">
					<div class="span3">
						<div class="row-fluid">
							<div class="span10">
								<a href="#" class="thumbnail">
								  <img src="http://dummyimage.com/120x80" alt="">
								</a>
							</div>
						</div><!--/row-->
						<div class="row-fluid">
							<div class="span12">
								<div class="btn-toolbar">
									<div class="btn-group">
										<a class="btn btn-info" href="#"><i class="icon-plus icon-white"></i> Select</a>
										<a class="btn btn-info" href="#"><i class="icon-pencil icon-white"></i> Edit</a>
										<a class="btn btn-info" href="#"><i class="icon-trash icon-white"></i> Delete</a>
									</div>
								</div>
							</div>
						</div><!--/row-->
					</div><!--/span-->
					<div class="span9">
						<div class="row-fluid">
							<div class="span12 map-link">
								<h3>${Name}</h3>
							</div>
						</div><!--/row-->
						<div class="row-fluid">
							<div class="span3">
							  <p>
								<div style="font-weight: bold">${ParcelId}</div>
								<div>${Address.AddressLine1} ${Address.AddressLine2}</div>
								<div>${Address.City}</div>
								<div>${Address.County} ${Address.StateProvinceRegion} ${Address.Zip}</div>
							  </p>
							</div>
							<div class="span2">
							  <p>
								<div>Site Sq Ft: ${SiteTotalSquareFoot}</div>
								<div>Units: ${Units}</div>
								<div>Zoning: ${Zoning}</div>
								<div>Parking: ${Parking}</div>
							  </p>
							</div><!--/span-->
							<div class="span2">
							  <p>
								<div>Bldg Sq Ft: ${BuildingTotalSquareFoot}</div>
								<div>Cond: ${Condition}</div>
								<div>Qual: ${Quality}</div>
								<div>Stories: ${Stories}</div>
							  </p>
							</div><!--/span-->
							<div class="span2">
							  <p>
								<div>${Price} | ${CostPerBuildingSquareFoot}/SF</div>
								<div>Sale ${SaleDate}</div>
								<div>OR B-P: ${OfficialRecordBookAndPage}</div>
							  </p>
							</div><!--/span-->
							<div class="span3">
							  <p><div><span style="font-weight: bold">Comments: </span>${Comments}</div></p>
							</div><!--/span-->
						</div><!--/row-->
					</div><!--/span-->				
				</div><!--/row-->
			</div><!--/row-well-->
        {{/each}}
    </script>
    <script type="text/html" id="queueTemplate">
        <ul>
            <li>
                <div>
                    ${ Name }, parcel ${ ParcelId } <a href="#" data-bind="click: function() { $parent.addOrRemovePropertyFromQueue($data) }">Remove</a> 
                </div>
            </li>
        </ul>
    </script>
    <script type="text/javascript">
        window.cloudcre.routing.urls({
            MultipleFamily : {
                search: '@Url.Action("Search", "MultipleFamily")',
                create: '@Url.Action("Create", "MultipleFamily")',
                edit: '@Url.Action("Edit", "MultipleFamily")',
                remove: '@Url.Action("Delete", "MultipleFamily")',
                summary: '@Url.Action("Summary", "MultipleFamily")'
            },
            Office : {
                search: '@Url.Action("Search", "Office")',
                create: '@Url.Action("Create", "Office")',
                edit: '@Url.Action("Edit", "Office")',
                remove: '@Url.Action("Delete", "Office")',
                summary: '@Url.Action("Summary", "Office")'
            },
            Retail : {
                search: '@Url.Action("Search", "Retail")',
                create: '@Url.Action("Create", "Retail")',
                edit: '@Url.Action("Edit", "Retail")',
                remove: '@Url.Action("Delete", "Retail")',
                summary: '@Url.Action("Summary", "Retail")'
            },
            Industrial : {
                search: '@Url.Action("Search", "Industrial")',
                create: '@Url.Action("Create", "Industrial")',
                edit: '@Url.Action("Edit", "Industrial")',
                remove: '@Url.Action("Delete", "Industrial")',
                summary: '@Url.Action("Summary", "Industrial")'
            },
            IndustrialCondominium : {
                search: '@Url.Action("Search", "IndustrialCondominium")',
                create: '@Url.Action("Create", "IndustrialCondominium")',
                edit: '@Url.Action("Edit", "IndustrialCondominium")',
                remove: '@Url.Action("Delete", "IndustrialCondominium")'
            },
            CommercialCondominium : {
                search: '@Url.Action("Search", "CommercialCondominium")',
                create: '@Url.Action("Create", "CommercialCondominium")',
                edit: '@Url.Action("Edit", "CommercialCondominium")',
                remove: '@Url.Action("Delete", "CommercialCondominium")'
            },
            CommercialLand : {
                search: '@Url.Action("Search", "CommercialLand")',
                create: '@Url.Action("Create", "CommercialLand")',
                edit: '@Url.Action("Edit", "CommercialLand")',
                remove: '@Url.Action("Delete", "CommercialLand")'
            },
            IndustrialLand : {
                search: '@Url.Action("Search", "IndustrialLand")',
                create: '@Url.Action("Create", "IndustrialLand")',
                edit: '@Url.Action("Edit", "IndustrialLand")',
                remove: '@Url.Action("Delete", "IndustrialLand")'
            },
            ResidentialLand : {
                search: '@Url.Action("Search", "ResidentialLand")',
                create: '@Url.Action("Create", "ResidentialLand")',
                edit: '@Url.Action("Edit", "ResidentialLand")',
                remove: '@Url.Action("Delete", "ResidentialLand")'
            },
            locations: '@Url.Action("Locations", "Search")',
            wizardBase: '@Url.ControllerForAction("StepOne", "ApartmentWizard")'
        });

        @{
            decimal? sqftMin2 = (Model.SqftMin.HasValue) ? Math.Floor(Model.SqftMin.Value/100.00m)*100 : default(decimal);
            decimal? sqftMax2 = (Model.SqftMax.HasValue) ? Math.Ceiling(Model.SqftMax.Value/100.00m)*100 : default(decimal);
        }

        $.whitney.Property.managers.siteSqFtSlider.options({
            sqftCeiling: @sqftMin2,
            sqftFloor: @sqftMax2
        });
        

        // property selection
        $('.dropdown-toggle').dropdown();
		$('.dropdown-menu').click(function(event){
			var selectItem = $(event.target).data('select-id');
			$(".searchPropType").text($(event.target).text());
		    window.cloudcre.viewModel.propertyTypeSelected($(event.target).text());
		}).find('a:first').trigger('click');

    </script>
}