@using SquishIt.Framework
@using Cloudcre.Web.HtmlHelpers
@model Cloudcre.Web.Models.PropertySearchResultViewModel

@{
    ViewBag.Title = "Cloud CRE - Search for Comparables";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<div class="container-fluid">
      <div class="row-fluid">
        <div class="span3">
		  <div class="well sidebar-nav">
            <ul class="nav nav-list">
			  <li class="dropdown">
				<a class="dropdown-toggle" data-toggle="dropdown" href="#">
					Search for <span class="searchPropType"></span> comparables<b class="caret"></b>
				</a>
                  <ul class="property-list dropdown-menu">
                      @Html.ToFormattedList(Model.PropertyType.ToList(), HtmlHelperExtensions.ListType.Unordered, @<a href="#" data-select-id="@item.Text">@item.Text</a>)
                  </ul>
			  </li>
            </ul>
          </div><!--/.well -->
            @using (Html.BeginForm("Index", "Search", FormMethod.Post, new { Id = "search-form-top", @class = "well" }))
            {
                <label>Location search (type 'city', 'county' or 'zip')</label>
                <div id="search_box_container"></div>
                <label class="checkbox">
                    @Html.CheckBox("mapsearch", false)Include current map location
                </label>
                <button type="submit" class="btn">Search</button>
            }
            @using (Html.BeginForm("Index", "Search", FormMethod.Post, new { Id = "search-form-top", @class = "well form-search" }))
            {
                <input id="keywords-search-box" type="text" class="input-medium search-query" placeholder="keyword search" />
                <button type="submit" class="btn">Search</button>
            }
            @using (Html.BeginForm("Index", "Search", FormMethod.Post, new { Id = "search-form-top", @class = "well" }))
            {
                decimal? sqftMin = (Model.SqftMin.HasValue) ? Math.Floor(Model.SqftMin.Value / 100.00m) * 100 : default(decimal);
                decimal? sqftMax = (Model.SqftMax.HasValue) ? Math.Ceiling(Model.SqftMax.Value / 100.00m) * 100 : default(decimal);
			  <label>Building size search
				<span class="help-inline">(In square footage)</span>
			  </label>
                <input name="sqftmin" id="sqftmin-box" type="text" class="input-small" maxlength="20" value="@sqftMin" placeholder="min" />
                <input name="sqftmax" id="sqftmax-box" type="text" class="input-small" maxlength="20" value="@sqftMax" placeholder="max" />
			    <button type="submit" class="btn">Search</button>
                <div>
                    <div id="slider-range"></div>
                </div>
            }
            @using (Html.BeginForm("Index", "Search", FormMethod.Post, new { Id = "search-form-top", @class = "well" }))
            {
			  <label>Sale range search
				<span class="help-inline">(mm/dd/yyyy)</span>
			  </label>
                <input id="mindate-box" name="mindate-box" type="text" class="input-small" placeholder="Start date" />
                <input id="maxdate-box" name="maxdate-box" type="text" class="input-small" placeholder="End date" />
			  <button type="submit" class="btn">Search</button>
            }
          <div class="well sidebar-nav">
            <ul class="nav nav-list">
              <li class="nav-header">Queue</li>
              <a href="/" style="display: none" data-bind="click: summaryReport, visible: tempCond()">Download Sumary Report</a>
              <div id="queued" data-bind='template: { name: "queueTemplate", foreach: queuedProperties()}'> </div>
            </ul>
          </div><!--/.well -->
        </div><!--/span-->
        <div class="span9">
          <div class="row-well">
            <div id="map"></div>
          </div>
          @*<div class="row-well">
              // uncomment to enable property create option.  Also must uncomment/enable the controller route
              <a href="#" data-bind="click: function() { window.open(window.cloudcre.routing.url[window.cloudcre.viewModel.propertyTypeSelected().split(' ').join('')].create) }">Create new <span class="searchPropType"></span></a>               
          </div>*@
			<div id="map-side-bar" data-bind='template: { name: "productItemTemplate", data: propertySearchResults }' />
        </div><!--/span-->
      </div><!--/row-->
      <hr>
      <footer>        
      </footer>
    </div><!--/.fluid-container-->
<div style="clear: both;"></div>
<div id="delete-dialog" title="Permanently remove a property">
    <div id="delete-dialog-msg"></div>
</div>
<div style="clear: both;"></div>

@section scripts {
    @MvcHtmlString.Create(Bundle.JavaScript().Add("~/Scripts/Views/Search/Index.js").Render("~/Scripts/ccre_search#.js"))
    <script type="text/html" id="productItemTemplate">
        {{each Properties}}
        <div class="row-well map-location" data-id="${$index + 1}" data-point="{ lat: ${Latitude}, lng: ${Longitude} }" data-category="'apartment'">
            <div class="row-fluid">
                <div class="span3">
                    <div class="row-fluid">
                        <div class="span10">
                            <a href="#" class="thumbnail">
                                <img src="http://dummyimage.com/120x80" alt="">
                            </a>
                        </div>
                    </div><!--/row-->
                    <div class="row-fluid">
                        <div class="span12">
                            <div class="btn-toolbar">
                                <div class="btn-group">
                                    <a class="btn btn-info" data-bind="click: function() { $parent.addOrRemovePropertyFromQueue($value) }, html: $parent.isQueued($value) ? $parent.removeMarkUp : $parent.selecteMarkUp" data-id="${Id}" data-name="${Name}" data-parcelid="${ParcelId}" href="#"><i class="icon-plus icon-white"></i></a>
                                    <a disabled="disabled" class="btn btn-info" href="#"><i class="icon-pencil icon-white"></i> Edit</a>
                                    <a disabled="disabled" class="btn btn-info" href="#"><i class="icon-trash icon-white"></i> Delete</a>
                                    @* 
                                    //Uncomment to activate edit/delete - also must turn on controller actions
                                    <a class="btn btn-info" data-bind="click: function() { $parent.editProperty($value) }" href="#"><i class="icon-pencil icon-white"></i> Edit</a>
	                                <a class="btn btn-info" data-bind="click: function() { $parent.deleteProperty($value) }" href="#"><i class="icon-trash icon-white"></i> Delete</a>
                                    *@
                                </div>
                            </div>
                        </div>
                    </div><!--/row-->
                </div><!--/span-->
                <div class="span9">
                    <div class="row-fluid">
                        <div class="span12 map-link">
                            <h3><a href="#" class="map-link">${Name}</a></h3>
                            <div class="info-box">
                                <div style="font-weight: bold" class="info-box-name">${Name}</div>
                                <div>
                                    <div class="info-box-price">Sold on ${regExDate(SaleDate)}</div> 
                                    Parcel Id: ${ParcelId}<br />
                                    Building SqFt: ${BuildingTotalSquareFoot}<br />
                                    ${Address.AddressLine1}<br />
                                    ${Address.City} ${Address.StateProvinceRegion} ${Address.Zip}
                                </div>
                            </div>
						</div>
					</div><!--/row-->
					<div class="row-fluid">
						<div class="span3">
							<p>
							<div style="font-weight: bold">${ParcelId}</div>
							<div>${Address.AddressLine1} ${Address.AddressLine2}</div>
							<div>${Address.City}</div>
							<div>${Address.County} ${Address.StateProvinceRegion} ${Address.Zip}</div>
							</p>
						</div>
						<div class="span2">
							<p>
							<div>Site Sq Ft: ${SiteTotalSquareFoot}</div>
							<div>Units: ${Units}</div>
							<div>Zoning: ${Zoning}</div>
							<div>Parking: ${Parking}</div>
							</p>
						</div><!--/span-->
						<div class="span2">
							<p>
							<div>Bldg Sq Ft: ${BuildingTotalSquareFoot}</div>
							<div>Cond: ${Condition}</div>
							<div>Qual: ${Quality}</div>
							<div>Stories: ${Stories}</div>
							</p>
						</div><!--/span-->
						<div class="span2">
							<p>
							<div>${Price} | ${CostPerBuildingSquareFoot}/SF</div>
							<div>Sale ${SaleDate}</div>
							<div>OR B-P: ${OfficialRecordBookAndPage}</div>
							</p>
						</div><!--/span-->
						<div class="span3">
							<p><div><span style="font-weight: bold">Comments: </span>${Comments}</div></p>
						</div><!--/span-->
					</div><!--/row-->
				</div><!--/span-->				
			</div><!--/row-->
		</div><!--/row-well-->
        {{/each}}
    </script>
    <script type="text/html" id="queueTemplate">
        <ul>
            <li>
                <div>
                    ${ Name }, parcel ${ ParcelId } <a href="#" data-bind="click: function() { $parent.addOrRemovePropertyFromQueue($data) }">Remove</a> 
                </div>
            </li>
        </ul>
    </script>
    <script type="text/javascript">
        window.cloudcre.routing.urls({
            MultipleFamily : {
                search: '@Url.Action("Search", "MultipleFamily")',
                create: '@Url.Action("Create", "MultipleFamily")',
                edit: '@Url.Action("Edit", "MultipleFamily")',
                remove: '@Url.Action("Delete", "MultipleFamily")',
                summary: '@Url.Action("Summary", "MultipleFamily")'
            },
            Office : {
                search: '@Url.Action("Search", "Office")',
                create: '@Url.Action("Create", "Office")',
                edit: '@Url.Action("Edit", "Office")',
                remove: '@Url.Action("Delete", "Office")',
                summary: '@Url.Action("Summary", "Office")'
            },
            Retail : {
                search: '@Url.Action("Search", "Retail")',
                create: '@Url.Action("Create", "Retail")',
                edit: '@Url.Action("Edit", "Retail")',
                remove: '@Url.Action("Delete", "Retail")',
                summary: '@Url.Action("Summary", "Retail")'
            },
            Industrial : {
                search: '@Url.Action("Search", "Industrial")',
                create: '@Url.Action("Create", "Industrial")',
                edit: '@Url.Action("Edit", "Industrial")',
                remove: '@Url.Action("Delete", "Industrial")',
                summary: '@Url.Action("Summary", "Industrial")'
            },
            IndustrialCondominium : {
                search: '@Url.Action("Search", "IndustrialCondominium")',
                create: '@Url.Action("Create", "IndustrialCondominium")',
                edit: '@Url.Action("Edit", "IndustrialCondominium")',
                remove: '@Url.Action("Delete", "IndustrialCondominium")'
            },
            CommercialCondominium : {
                search: '@Url.Action("Search", "CommercialCondominium")',
                create: '@Url.Action("Create", "CommercialCondominium")',
                edit: '@Url.Action("Edit", "CommercialCondominium")',
                remove: '@Url.Action("Delete", "CommercialCondominium")'
            },
            CommercialLand : {
                search: '@Url.Action("Search", "CommercialLand")',
                create: '@Url.Action("Create", "CommercialLand")',
                edit: '@Url.Action("Edit", "CommercialLand")',
                remove: '@Url.Action("Delete", "CommercialLand")'
            },
            IndustrialLand : {
                search: '@Url.Action("Search", "IndustrialLand")',
                create: '@Url.Action("Create", "IndustrialLand")',
                edit: '@Url.Action("Edit", "IndustrialLand")',
                remove: '@Url.Action("Delete", "IndustrialLand")'
            },
            ResidentialLand : {
                search: '@Url.Action("Search", "ResidentialLand")',
                create: '@Url.Action("Create", "ResidentialLand")',
                edit: '@Url.Action("Edit", "ResidentialLand")',
                remove: '@Url.Action("Delete", "ResidentialLand")'
            },
            locations: '@Url.Action("Locations", "Search")',
            wizardBase: '@Url.ControllerForAction("StepOne", "ApartmentWizard")'
        });

        @{
            decimal? sqftMin2 = (Model.SqftMin.HasValue) ? Math.Floor(Model.SqftMin.Value / 100.00m) * 100 : default(decimal);
            decimal? sqftMax2 = (Model.SqftMax.HasValue) ? Math.Ceiling(Model.SqftMax.Value / 100.00m) * 100 : default(decimal);
        }

        $.whitney.Property.managers.siteSqFtSlider.options({
            sqftCeiling: @sqftMin2,
            sqftFloor: @sqftMax2
        });
        
        // property selection
        $('.dropdown-toggle').dropdown();
		$('.dropdown-menu').click(function(event){
			var selectItem = $(event.target).data('select-id');
		    $(".searchPropType").text($(event.target).text());
		    window.cloudcre.viewModel.propertyTypeSelected($(event.target).text());
		}).find('a:first').trigger('click');
    </script>
}